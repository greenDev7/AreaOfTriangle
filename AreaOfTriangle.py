import numpy as np

# Делаем обертку для вычисления определителя
def det(x11, x12, x21, x22):
    '''Возвращает определитель второго порядка'''
    return np.linalg.det(np.array([[x11, x12], [x21, x22]]))  

# Коэффициенты для задания прямых
a1, b1, c1 = 1.0, 0.0, 0.0    # 1-ая прямая
a2, b2, c2 = 0.0, 1.0, 0.0    # 2-ая прямая
a3, b3, c3 = -1.0, -1.0, -1.0 # 3-я прямая

p1_x, p1_y = 0.0, 0.0 # (p1_x, p1_y) - точка пересечения 1-ой и 2-ой прямой 
p2_x, p2_y = 0.0, 0.0 # (p2_x, p2_y) - точка пересечения 1-ой и 3-ей прямой  
p3_x, p3_y = 0.0, 0.0 # (p3_x, p3_y ) - точка пересечения 2-ой и 3-ей прямой

# Находить точки пересечения будем через решение системы двух линейных уравнений
# с двумя неизвестными методом Крамера (вычисляя определители второго порядка)

# Находим точку пересечения 1-ой и 2-ой прямой 
delta = det(a1, b1, a2, b2)
delta1 = det(c1, b1, c2, b2)
delta2 = det(a1, c1, a2, c2)

p1_x = delta1 / delta
p1_y = delta2 / delta

# Находим точку пересечения 1-ой и 3-ей прямой
delta = det(a1, b1, a3, b3)
delta1 = det(c1, b1, c3, b3)
delta2 = det(a1, c1, a3, c3)

p2_x = delta1 / delta
p2_y = delta2 / delta

# Находим точку пересечения 2-ой и 3-ей прямой
delta = det(a2, b2, a3, b3)
delta1 = det(c2, b2, c3, b3)
delta2 = det(a2, c2, a3, c3)

p3_x = delta1 / delta
p3_y = delta2 / delta

# Вычисляем площадь треугольника по трем точкам как половину модуля определителя третьего порядка
n_array = np.array([[p1_x, p1_y, 1.0], [p2_x, p2_y, 1.0], [p3_x, p3_y, 1.0]]) # Сформируем определитель
area = 0.5 * abs(np.linalg.det(n_array))

print('Площадь треугольника = ', area)